- hosts: db
  gather_facts: yes
  become: true
  tasks:

    - name: Generate docker-compose file for current version
      template:
        src: docker-compose-{{ item }}.yml.j2
        dest: "/opt/{{ env }}/docker-compose.{{ env }}-{{ item }}.yml"
      with_items:
        - db
      register: docker_compose

    - name: Create network for current version
      docker_network:
        name: "{{ env }}"
        state: present
      when: single_host_installation

    - name: Create dir
      file:
        path: "/opt/{{ env }}/{{ item }}"
        state: directory
        owner: 70
        group: 70
      with_items:
        - data-pg
      when: single_host_installation

    - name: Restart docker-compose for current version database
      become: true
      become_user: docker
      command: docker-compose -f "/opt/{{ docker_image_version }}/docker-compose.{{ docker_image_version }}-db.yml" up -d --force-recreate
      when: docker_compose.changed

    - name: Wait for db to start
      wait_for:
        host: 127.0.0.1
        port: "{{ db_listen_docker_port }}"
        delay: 5
        timeout: 60

    - name: Create role
      postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        login_host: 127.0.0.1
        login_port: "{{ db_listen_docker_port }}"
        login_password: "{{ POSTGRES_PASSWORD }}"

    - name: Create database
      postgresql_db:
        name: "{{ db_name }}"
        login_host: 127.0.0.1
        login_port: "{{ db_listen_docker_port }}"
        login_password: "{{ POSTGRES_PASSWORD }}"
        owner: "{{ db_user }}"

    #TODO разделить плейбуки на отдельные файлы


